Commit messages are a valuable resource in the comprehension of software evolution since they provide a record of changes such as feature additions and bug repairs. Unfortunately,  programmers often neglect to write good commit messages. Different techniques have been proposed to help programmers by automatically writing these messages. These techniques are effective at describing what changed, but are often verbose and lack context for understanding the rationale behind a change. In contrast, humans write messages that are short and summarize the high-level rationale. In  this paper, we adapt Neural Machine Translation  (NMT) to automatically “translate” diffs into commit  messages. We will train an NMT algorithm using a  corpus of diffs and human-written commit messages  from the top 1k GitHub projects. We will also design  a filter to help ensure that we only train the  algorithm on higher-quality commit messages. Our  evaluation uncovers a pattern in which the messages  we generate tend to be either very high or very low quality.
